// Mocks generated by Mockito 5.4.5 from annotations
// in starlist/test/ranking_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:starlist/src/features/ranking/models/ranking_model.dart' as _i2;
import 'package:starlist/src/features/ranking/repositories/ranking_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRankingModel_0 extends _i1.SmartFake implements _i2.RankingModel {
  _FakeRankingModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RankingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRankingRepository extends _i1.Mock implements _i3.RankingRepository {
  MockRankingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.RankingModel> getTrendingContent({
    _i2.RankingPeriod? period = _i2.RankingPeriod.week,
    String? contentType,
    int? limit = 20,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrendingContent,
          [],
          {
            #period: period,
            #contentType: contentType,
            #limit: limit,
            #forceRefresh: forceRefresh,
          },
        ),
        returnValue: _i4.Future<_i2.RankingModel>.value(_FakeRankingModel_0(
          this,
          Invocation.method(
            #getTrendingContent,
            [],
            {
              #period: period,
              #contentType: contentType,
              #limit: limit,
              #forceRefresh: forceRefresh,
            },
          ),
        )),
      ) as _i4.Future<_i2.RankingModel>);

  @override
  _i4.Future<_i2.RankingModel> getPopularStars({
    _i2.RankingPeriod? period = _i2.RankingPeriod.week,
    String? category,
    int? limit = 20,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularStars,
          [],
          {
            #period: period,
            #category: category,
            #limit: limit,
            #forceRefresh: forceRefresh,
          },
        ),
        returnValue: _i4.Future<_i2.RankingModel>.value(_FakeRankingModel_0(
          this,
          Invocation.method(
            #getPopularStars,
            [],
            {
              #period: period,
              #category: category,
              #limit: limit,
              #forceRefresh: forceRefresh,
            },
          ),
        )),
      ) as _i4.Future<_i2.RankingModel>);

  @override
  _i4.Future<_i2.RankingModel> getCategoryRanking({
    required String? categoryId,
    _i2.RankingPeriod? period = _i2.RankingPeriod.week,
    int? limit = 20,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategoryRanking,
          [],
          {
            #categoryId: categoryId,
            #period: period,
            #limit: limit,
            #forceRefresh: forceRefresh,
          },
        ),
        returnValue: _i4.Future<_i2.RankingModel>.value(_FakeRankingModel_0(
          this,
          Invocation.method(
            #getCategoryRanking,
            [],
            {
              #categoryId: categoryId,
              #period: period,
              #limit: limit,
              #forceRefresh: forceRefresh,
            },
          ),
        )),
      ) as _i4.Future<_i2.RankingModel>);

  @override
  _i4.Future<_i2.RankingModel> getPersonalizedRanking({
    required String? userId,
    _i2.RankingPeriod? period = _i2.RankingPeriod.week,
    int? limit = 20,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPersonalizedRanking,
          [],
          {
            #userId: userId,
            #period: period,
            #limit: limit,
            #forceRefresh: forceRefresh,
          },
        ),
        returnValue: _i4.Future<_i2.RankingModel>.value(_FakeRankingModel_0(
          this,
          Invocation.method(
            #getPersonalizedRanking,
            [],
            {
              #userId: userId,
              #period: period,
              #limit: limit,
              #forceRefresh: forceRefresh,
            },
          ),
        )),
      ) as _i4.Future<_i2.RankingModel>);
}
